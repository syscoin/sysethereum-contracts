const truffleAssert = require('truffle-assertions');
const SyscoinRelay = artifacts.require('SyscoinRelay');

contract('SyscoinRelay', (accounts) => {
  let syscoinRelay;

  describe("Test pure/view computation functions", () => {
    before(async () => {
      syscoinRelay = await SyscoinRelay.at(SyscoinRelay.address);
    });
    it("bytesToUint32", async () => {
      const result = await syscoinRelay.bytesToUint32("0x01020304", 0);
      assert.equal(result, 16909060, "converted bytes are not the expected ones");
    });
    it("parseAssetTx() no contract", async () => {
      const txBytes = "0x82000000048488982a149b5ac96bef6be131e0b2f0ad9269ba66c9b4216901c0b81523123e000000006a473044022049d1eeec8c4f1b9e6414339bc9de8d466d2c0f0cf799eab4b5879f52883307c702201d0575c7dbdf18020da6df8a41e379b50ed62984604df2fab84df0aeb4ff4d5a01210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff034e10cf7e5158f62fe2674c89e8fc4ee94d2da62d81c0ffc8a237e8dfcb3e21000000006a473044022016dda88ddebc1d741a856854462b9d86391a1ec103979115eed96a7d388569c50220599583f7e35a06b620d49ca711ffd5582f96491fa6861a7aba89f242e504593c01210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffffc45be9fa19a24d90a3180a562bdd8b8a5b71d4c2e0a9f84b6c55c439ebf2f22a000000006a473044022026995ec771b58cb7f1f4ecda54535671b564e1fcdf319572be89ee9c8571203a02203c37487de9930b371f6b73cbeac34c7274176cbf013c0396ab54b513ee97395401210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff961fb68ada366165b25199757ce8a527f11d0744bbcbaad402815e09623dae04000000006a4730440220312bb832dd38f46d20f2090495590882a672f0fe21deefad007af211e62ac97d022008f71cd61edb96293dc194afcccb9331d148f8050bf5ce8b83a40c37ad64d24601210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff030011102401000000160014e36467f9c303ae5af94f528b87489cacdc3ffbd220a8f50500000000160014b5e11a429cb584ba30fc3db957e7346bc7540ef300d6117e030000003b6a39018488982a0101000008c10456464e55cd10237b2264657363223a2259584e7a5a5851675a47567a59334a70634852706232343d227d007f7f00000000";
      await truffleAssert.reverts(syscoinRelay.parseAssetTx(txBytes));
    });
    it("parseAssetTx()", async () => {
      const txBytes = "0x8200000004f0b8a1a4c993ffd133335d84b9aba6159bb8129384a253131d1998f28c3d371b000000006a47304402203b497eb7acb0d47f18c6fef336a3eebc630c6030bc4427b0bdd5337b76ff5eb502205d40f64e47c209d5462af18913aae3f66b1c95176d3cd0a44dd81f19f3dac18601210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff043cd5b1662309701440c7941d61cfb95d0c98e22ff8ff8b5994149e988ab179000000006a473044022070611022e52796a5dfeca1544612d01261191712e6064cce1d2b1c2599f37b2002200e93e391676ca6ba73d2248ff6364184ebd5a23944b0c77570b5e99e1b37e4f301210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff18e806cd5aa13974beb89d41c5040a48242c24bffa8e65e9fdf3bc35e2a7c1b4000000006a473044022036764ec65e5f1d447eb407dde9ec1a6ae3ff649f7c1c6247987c0e6ca6eab06e0220725e4de336c471dadaf610df5c97f1120a3753f53548f4db06c35985506c697001210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff33b5d4b94367acd8ef20e10678a75de3c02e143a3f9bb0b0f0c31ed0396454c3000000006a4730440220438e681501363363be3fce907956f0ef781aaf997605708a8f6db9a9e160e1cd02201defe48b376a6b8e8b48892edb101172970bceca85dc0e6890a73bcd4a4ee0db01210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff0394a2f5050000000016001446e3b0ae31039f42ff58148692e100d591c6a04300d6117e03000000826a4c7f014b89e89b0100000008e30456464e55cd10149f90b5093f35aeac5fbaeb591f9c9de8e2844a4600237b2264657363223a2259584e7a5a5851675a47567a59334a70634852706232343d227d00147dd27c8ac82d7fa798da2634a144ee1dc2b4a6050600e8030a9001807ac8009244460080c22807008ea010000000007f7f0011102401000000160014537882dc26d202f2b3149ee731af4f544a34e9ef00000000";
      let result = await syscoinRelay.parseAssetTx(txBytes);
      assert.equal(result.errorCode, '0', "errorCode should be 0");
      assert.equal(result.assetGuid, '2615707979', "Asset GUID should be 2615707979");
      assert.equal(result.erc20Address, '0x9F90B5093F35AeaC5fbAeB591F9c9de8e2844A46', "Asset ERC20 Contract should be 0x9f90b5093f35aeac5fbaeb591f9c9de8e2844a46");
    });
    it("scanAssetTx", async () => {
      const expectedJson = '{"0":"9be8894b","1":"0x9F90B5093F35AeaC5fbAeB591F9c9de8e2844A46","2":"8"}';
      const txBytes = "0x8200000004f0b8a1a4c993ffd133335d84b9aba6159bb8129384a253131d1998f28c3d371b000000006a47304402203b497eb7acb0d47f18c6fef336a3eebc630c6030bc4427b0bdd5337b76ff5eb502205d40f64e47c209d5462af18913aae3f66b1c95176d3cd0a44dd81f19f3dac18601210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff043cd5b1662309701440c7941d61cfb95d0c98e22ff8ff8b5994149e988ab179000000006a473044022070611022e52796a5dfeca1544612d01261191712e6064cce1d2b1c2599f37b2002200e93e391676ca6ba73d2248ff6364184ebd5a23944b0c77570b5e99e1b37e4f301210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff18e806cd5aa13974beb89d41c5040a48242c24bffa8e65e9fdf3bc35e2a7c1b4000000006a473044022036764ec65e5f1d447eb407dde9ec1a6ae3ff649f7c1c6247987c0e6ca6eab06e0220725e4de336c471dadaf610df5c97f1120a3753f53548f4db06c35985506c697001210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff33b5d4b94367acd8ef20e10678a75de3c02e143a3f9bb0b0f0c31ed0396454c3000000006a4730440220438e681501363363be3fce907956f0ef781aaf997605708a8f6db9a9e160e1cd02201defe48b376a6b8e8b48892edb101172970bceca85dc0e6890a73bcd4a4ee0db01210227d85ba011276cf25b51df6a188b75e604b38770a462b2d0e9fb2fc839ef5d3ffeffffff0394a2f5050000000016001446e3b0ae31039f42ff58148692e100d591c6a04300d6117e03000000826a4c7f014b89e89b0100000008e30456464e55cd10149f90b5093f35aeac5fbaeb591f9c9de8e2844a4600237b2264657363223a2259584e7a5a5851675a47567a59334a70634852706232343d227d00147dd27c8ac82d7fa798da2634a144ee1dc2b4a6050600e8030a9001807ac8009244460080c22807008ea010000000007f7f0011102401000000160014537882dc26d202f2b3149ee731af4f544a34e9ef00000000";
      const resultPos = await syscoinRelay.getOpReturnPos(txBytes, 4);
      var pos = parseInt(resultPos[1]);
      
      const result = await syscoinRelay.scanAssetTx(txBytes, pos);
      assert.equal(JSON.stringify(result), expectedJson, "converted asset tx bytes are not the expected ones");
    });
  });
});
